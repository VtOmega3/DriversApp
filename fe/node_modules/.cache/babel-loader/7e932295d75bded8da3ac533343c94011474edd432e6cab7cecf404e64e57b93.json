{"ast":null,"code":"var _jsxFileName = \"/home/vitor/Documentos/Programacao/Drivers/fe/src/components/PerformanceSummary.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerformanceSummary(_ref) {\n  let {\n    data\n  } = _ref;\n  const calculateTotalSummary = () => {\n    const totalSummary = {\n      month: '',\n      totalMileage: 0,\n      filledDays: 0,\n      averageMileagePerDay: 0,\n      averageIncomePerDay: 0,\n      averageExpensesPerDay: 0,\n      averageProfitPerDay: 0\n    };\n    totalSummary.month = data[0].month;\n    data.forEach(weekData => {\n      totalSummary.totalMileage += weekData.mileage;\n      totalSummary.filledDays += weekData.filledDays;\n    });\n    if (totalSummary.filledDays > 0) {\n      totalSummary.averageMileagePerDay = totalSummary.totalMileage / totalSummary.filledDays;\n    }\n    totalSummary.averageIncomePerDay = calculateAverage('income');\n    totalSummary.averageExpensesPerDay = calculateAverage('expenses');\n    totalSummary.averageProfitPerDay = calculateAverage('profit');\n    return totalSummary;\n  };\n  const calculateAverage = field => {\n    let total = 0;\n    data.forEach(weekData => {\n      total += weekData[field];\n    });\n    return total / data.length;\n  };\n  const totalSummary = calculateTotalSummary();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"performance-summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Performance Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Month: \", totalSummary.month]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Mileage: \", totalSummary.totalMileage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Filled Days: \", totalSummary.filledDays]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average Mileage per Day: \", totalSummary.averageMileagePerDay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average Income per Day: \", totalSummary.averageIncomePerDay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average Expenses per Day: \", totalSummary.averageExpensesPerDay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average Profit per Day: \", totalSummary.averageProfitPerDay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = PerformanceSummary;\nexport default PerformanceSummary;\nvar _c;\n$RefreshReg$(_c, \"PerformanceSummary\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PerformanceSummary","_ref","data","calculateTotalSummary","totalSummary","month","totalMileage","filledDays","averageMileagePerDay","averageIncomePerDay","averageExpensesPerDay","averageProfitPerDay","forEach","weekData","mileage","calculateAverage","field","total","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vitor/Documentos/Programacao/Drivers/fe/src/components/PerformanceSummary.jsx"],"sourcesContent":["import React from 'react';\n\nfunction PerformanceSummary({ data }) {\n  const calculateTotalSummary = () => {\n    const totalSummary = {\n      month: '', \n      totalMileage: 0,\n      filledDays: 0,\n      averageMileagePerDay: 0,\n      averageIncomePerDay: 0,\n      averageExpensesPerDay: 0,\n      averageProfitPerDay: 0,\n    };\n\n    totalSummary.month = data[0].month;\n\n    data.forEach((weekData) => {\n      totalSummary.totalMileage += weekData.mileage;\n      totalSummary.filledDays += weekData.filledDays;\n    });\n\n    if (totalSummary.filledDays > 0) {\n      totalSummary.averageMileagePerDay = totalSummary.totalMileage / totalSummary.filledDays;\n    }\n\n    totalSummary.averageIncomePerDay = calculateAverage('income');\n    totalSummary.averageExpensesPerDay = calculateAverage('expenses');\n    totalSummary.averageProfitPerDay = calculateAverage('profit');\n\n    return totalSummary;\n  };\n\n  const calculateAverage = (field) => {\n    let total = 0;\n\n    data.forEach((weekData) => {\n      total += weekData[field];\n    });\n\n    return total / data.length;\n  };\n\n  const totalSummary = calculateTotalSummary();\n\n  return (\n    <div className=\"performance-summary\">\n      <h3>Performance Summary</h3>\n      <p>Month: {totalSummary.month}</p>\n      <p>Total Mileage: {totalSummary.totalMileage}</p>\n      <p>Filled Days: {totalSummary.filledDays}</p>\n      <p>Average Mileage per Day: {totalSummary.averageMileagePerDay}</p>\n      <p>Average Income per Day: {totalSummary.averageIncomePerDay}</p>\n      <p>Average Expenses per Day: {totalSummary.averageExpensesPerDay}</p>\n      <p>Average Profit per Day: {totalSummary.averageProfitPerDay}</p>\n    </div>\n  );\n}\n\nexport default PerformanceSummary;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
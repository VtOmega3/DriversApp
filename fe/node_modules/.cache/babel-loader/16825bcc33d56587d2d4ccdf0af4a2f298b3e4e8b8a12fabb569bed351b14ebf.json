{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3000/api';\nexport const getDailyData = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/daily`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch daily data');\n  }\n};\nexport const getWeeklyData = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/weekly`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch weekly data');\n  }\n};\nexport const getMonthlyData = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/monthly`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch monthly data');\n  }\n};\nexport const saveDailyData = async earnings => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/daily`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to save daily data');\n    }\n  } catch (error) {\n    throw new Error('Failed to save daily data');\n  }\n};","map":{"version":3,"names":["API_BASE_URL","getDailyData","response","fetch","data","json","error","Error","getWeeklyData","getMonthlyData","saveDailyData","earnings","method","headers","ok"],"sources":["/home/vitor/Documentos/Programacao/Drivers/fe/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3000/api';\n\nexport const getDailyData = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/daily`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch daily data');\n  }\n};\n\nexport const getWeeklyData = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/weekly`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch weekly data');\n  }\n};\n\nexport const getMonthlyData = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/monthly`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch monthly data');\n  }\n};\n\nexport const saveDailyData = async (earnings) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/summary/daily`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    if(!response.ok) {\n      throw new Error('Failed to save daily data');\n    }\n  } catch (error) {\n    throw new Error('Failed to save daily data');\n  }\n};\n\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,gBAAe,CAAC;IAC7D,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,iBAAgB,CAAC;IAC9D,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,kBAAiB,CAAC;IAC/D,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,gBAAe,EAAE;MAC5DY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,IAAG,CAACX,QAAQ,CAACY,EAAE,EAAE;MACf,MAAM,IAAIP,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAC9C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}